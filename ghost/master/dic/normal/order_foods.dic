//******************************************************************************
// 食べ物や飲み物を注文したりゴーストに差し入れする機能
//******************************************************************************

// 自動でトーク中の改行にウェイトを追加
// #define \n[half] %(NewLine(1))
// #define \n %(NewLine(2))

// 最初のスコープ変更以外に改行とウェイトを追加
#define '\0 '\h
#define '\1 '\u
#define "\0 "\h
#define "\1 "\u
#define \0 %(NewLine(3))\0
#define \1 %(NewLine(3))\1

// 鈴の一人称を書き換え
#define わたし %(GetSuzuMyself)

// サーフェス短縮表記
#define [[ \s[
#define ]] ]

//******************************************************************************
// フードオーダー周り
//******************************************************************************

OpenFoodMenu
{
    Init
    --
    "\h[[0]]\u[[1015]]はいっ。%(NewLine(2))[[1000]]こちらフードメニューになります。\n\n[half]"
    --
    FoodMenuTop
}

RevertFoodMenu
{
    Init
    --
    "\h[[0]]\u[[1000]]"
    --
    FoodMenuTop
}

FoodMenuTop
{
    if month == userBirthMonth && day == userBirthDay && !isReceivedBirthDayParfait{
        AYATEMPLATE.MenuItem('スペシャル猫パフェ', 'ChooseBirthDayParfait', 0)
        --
        NewLine(3,0)
    }
    --
    AYATEMPLATE.MenuItem('ホットドリンク', 'HotDrinkMenu', 0)
    --
    AYATEMPLATE.MenuItem('ドリンク', 'DrinkMenu')
    --
    AYATEMPLATE.MenuItem('アルコール', 'AlcoholMenu')
    --
    AYATEMPLATE.MenuItem('フードメニュー', 'FoodMenu')
    --
    AYATEMPLATE.MenuItem('スイーツ', 'SweetsMenu')
    --
    if isDebugMode{
        AYATEMPLATE.MenuItem('【デバッグ】イベントメニュー', 'Debug_EventFood')
        --
        AYATEMPLATE.MenuItem('【デバッグ】月替わりメニュー', 'Debug_LimitedFood')
    }
    --
    AYATEMPLATE.MenuItem('おまかせで', 'OmakaseMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close', 150)
}

ChooseFood
{
    temp_chosenFood = temp_ChoiseExRef

    Init
    --
    "\2\_q【%(temp_chosenFood)】\_q\w[1600]"
    --
    GetFoodsData(temp_chosenFood, FOOD_DESCRIPTION)
    --
    '\2'
    --
    AYATEMPLATE.MenuItem('オーダーする', 'OrderFood', 150)
    --
    AYATEMPLATE.MenuItem('他のメニューも見てみる', 'RevertFoodMenu')
}

OrderFood
{
    Init
    --
    '\u[[1016]]\h[[16]]はーい。\w8それじゃ、用意しますね。'
    '\u[[1000]]\h[[16]]ん、わかりました。\w9ちょっと待っててね。'
    '\u[[1016]]\h[[55]]もちろん、よろこんで。\w6[[16]]少々お待ちください。'
    --
    "[[999]]\0…\w9\w9\w9…\w9\w9\w9…"
    --
    "\0[[0]]おまたせしました。%(NewLine(2))/
    [[16]]%(temp_chosenFood)になります。\2"
    "\0[[5]]お待たせ！！%(NewLine(2))/
    [[16]]こちら、%(temp_chosenFood)になります。\2"
    "\0[[25]]できました！！%(NewLine(2))/
    [[16]]%(temp_chosenFood)、こちらにお置きしますね。\2"
    --
    AYATEMPLATE.MenuItem('いただく', 'EatFood', 0)
    --
    if isGivenFoodToYuri{
        '\_q\n\![*]\f[strike,1]悠梨に差し入れる\f[strike,0]（また明日）\_q'
    }
    else{
        AYATEMPLATE.MenuItem('悠梨に差し入れる', 'GiveToYuri', 150)
    }
    --
    if isGivenFoodToSuzu{
        '\_q\n\![*]\f[strike,1]鈴に差し入れる\f[strike,0]（また明日）\_q'
    }
    else{
    AYATEMPLATE.MenuItem('鈴に差し入れる', 'GiveToSuzu')
    }
}

EatFood
{
    Init
    --
    GetFoodsData(temp_chosenFood, FOOD_TEXT_TASTING)
    --
    if isDebugMode{
        '\n[150]【デバッグモード】'
        --
        AYATEMPLATE.MenuItem('悠梨に差し入れる', 'GiveToYuri')
        --
        AYATEMPLATE.MenuItem('鈴に差し入れる', 'GiveToSuzu')
        --
        AYATEMPLATE.MenuItem('やめる', 'Menu_Close')
    }
    else{
        '\e'
    }
}

GiveToYuri
{
    _favPoint = GetFoodsData(temp_chosenFood, FOOD_GET_FAV_YURI)
    _favPoint = TOINT(_favPoint)

    if _favPoint >= 0 {
        fav_Yuri += _favPoint

        if !isDebugMode
            isGivenFoodToYuri = 1
    }

    Init
    --
    GetFoodsData(temp_chosenFood, FOOD_TEXT_TO_GIVE_YURI)
    --
    if _favPoint >= 0 {
        if isDebugMode{
            '\2【デバッグモード】'
            --
            AYATEMPLATE.MenuItem('自分でいただく', 'EatFood')
            --
            AYATEMPLATE.MenuItem('鈴に差し入れる', 'GiveToSuzu')
            --
            AYATEMPLATE.MenuItem('やめる', 'Menu_Close')
        }
        else{
            '\e'
        }
    }
    else{
        '\2'
        --
        AYATEMPLATE.MenuItem('自分でいただく', 'EatFood', 0)
        --
        if isGivenFoodToSuzu {
            '\_q\n\![*]\f[strike,1]鈴に差し入れる\f[strike,0]（また明日）\_q'
        }
        else{
            AYATEMPLATE.MenuItem('鈴に差し入れる', 'GiveToSuzu')
        }
    }
}

GiveToSuzu
{
    _favPoint = GetFoodsData(temp_chosenFood, FOOD_GET_FAV_SUZU)

    if _favPoint >= 0 {
        fav_Suzu += _favPoint

        if !isDebugMode
            isGivenFoodToSuzu = 1
    }

    Init
    --
    GetFoodsData(temp_chosenFood, FOOD_TEXT_TO_GIVE_SUZU)
    --
    if _favPoint >= 0 {
        if isDebugMode{
            '\2【デバッグモード】'
            --
            AYATEMPLATE.MenuItem('自分でいただく', 'EatFood')
            --
            AYATEMPLATE.MenuItem('悠梨に差し入れる', 'GiveToYuri')
            --
            AYATEMPLATE.MenuItem('やめる', 'Menu_Close')
        }
        else{
            '\e'
        }
    }
    else{
        '\2'
        --
        AYATEMPLATE.MenuItem('自分でいただく', 'EatFood', 0)
        --
        if isGivenFoodToYuri {
            '\_q\n\![*]\f[strike,1]悠梨に差し入れる\f[strike,0]（また明日）\_q'
        }
        else{
            AYATEMPLATE.MenuItem('悠梨に差し入れる', 'GiveToYuri')
        }
    }
}

//******************************************************************************
// 各フードカテゴリーごとのテキスト
//******************************************************************************

DrinkMenu
{
    _arrLen = WD_drink(-1)
    _text = Init
    _text += '\1\_q ---- ドリンクメニュー ----\n[half]'
    
    for _i = 0; _i < _arrLen; _i++ {
        _text += "\n\![*]\q[%(WD_drink(_i)),ChooseFood,%(WD_drink(_i))]"
    }

    _text += '\_q'

    _text
    --
    AYATEMPLATE.MenuItem('もどる', 'RevertFoodMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close')
}

HotDrinkMenu
{
    _arrLen = WD_hotdrink(-1)
    _text = Init
    _text += '\1\_q ---- ホットドリンク ----\n[half]'
    
    for _i = 0; _i < _arrLen; _i++ {
        _text += "\n\![*]\q[%(WD_hotdrink(_i)),ChooseFood,%(WD_hotdrink(_i))]"
    }

    _text += '\_q'

    _text
    --
    AYATEMPLATE.MenuItem('もどる', 'RevertFoodMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close')
}

AlcoholMenu
{
    _arrLen = WD_alcohol(-1)
    _text = Init
    _text += '\1\_q ---- アルコール ----\n[half]'
    
    for _i = 0; _i < _arrLen; _i++ {
        _text += "\n\![*]\q[%(WD_alcohol(_i)),ChooseFood,%(WD_alcohol(_i))]"
    }

    _text += '\_q'

    _text
    --
    AYATEMPLATE.MenuItem('もどる', 'RevertFoodMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close')
}

FoodMenu
{
    _arrLen = WD_food(-1)
    _text = Init
    _text += '\1\_q ---- フードメニュー ----\n[half]'
    
    for _i = 0; _i < _arrLen; _i++ {
        _text += "\n\![*]\q[%(WD_food(_i)),ChooseFood,%(WD_food(_i))]"
    }

    _text += '\_q'

    _text
    --
    AYATEMPLATE.MenuItem('もどる', 'RevertFoodMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close')
}

SweetsMenu
{
    _arrLen = WD_sweets(-1)
    _text = Init
    _text += "\1\_q ---- スイーツ ----\n\n[half]今月の限定メニュー\n\![*]\q[%(WD_newmenu),ChooseFood,%(WD_newmenu)]\n[half]"
    
    for _i = 0; _i < _arrLen; _i++ {
        _text += "\n\![*]\q[%(WD_sweets(_i)),ChooseFood,%(WD_sweets(_i))]"
    }

    _text += '\_q'

    _text
    --
    AYATEMPLATE.MenuItem('もどる', 'RevertFoodMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close')
}

Debug_EventFood
{
    Init
    --
    '\1\_q ---- イベントメニュー ----\n[half]/
    \n\![*]\q[スペシャル猫パフェ,ChooseBirthDayParfait]\_q'
    --
    AYATEMPLATE.MenuItem('もどる', 'RevertFoodMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close')
}

Debug_LimitedFood
{
    Init
    --
    '\1\_q ---- 月替わりメニュー ----\n[half]/
    \n\![*]\q[ガレットデロワ,ChooseFood,ガレットデロワ]/
    \n\![*]\q[生チョコ,ChooseFood,生チョコ]/
    \n\![*]\q[ストロベリーパフェ,ChooseFood,ストロベリーパフェ]/
    \n\![*]\q[さくらベーグル,ChooseFood,さくらベーグル]/
    \n\![*]\q[抹茶ロールケーキ,ChooseFood,抹茶ロールケーキ]/
    \n\![*]\q[梅ゼリーポンチ,ChooseFood,梅ゼリーポンチ]/
    \n\![*]\q[マンゴープリン,ChooseFood,マンゴープリン]/
    \n\![*]\q[チョコミントドリンク,ChooseFood,チョコミントドリンク]/
    \n\![*]\q[ワインゼリー,ChooseFood,ワインゼリー]/
    \n\![*]\q[かぼちゃキッシュ,ChooseFood,かぼちゃキッシュ]/
    \n\![*]\q[レモンパイ,ChooseFood,レモンパイ]/
    \n\![*]\q[シュトーレン,ChooseFood,シュトーレン]/
    \_q'
    --
    AYATEMPLATE.MenuItem('もどる', 'RevertFoodMenu', 150)
    --
    AYATEMPLATE.MenuItem('やっぱりやめる', 'Menu_Close')
}

OmakaseMenu
{
    // メニューの総数をカウント
    _menuCount = WD_drink(-1) + WD_hotdrink(-1) + WD_alcohol(-1) + WD_food(-1) + WD_sweets(-1) + 1

    _randomMenu = RAND(_menuCount)

    if _randomMenu < WD_drink(-1)
    {
        temp_ChoiseExRef = WD_drink(_randomMenu)
    }
    else{
        _randomMenu -= WD_drink(-1)

        if _randomMenu < WD_hotdrink(-1)
        {
            temp_ChoiseExRef = WD_hotdrink(_randomMenu)
        }
        else{
            _randomMenu -= WD_hotdrink(-1)

            if _randomMenu < WD_alcohol(-1)
            {
                temp_ChoiseExRef = WD_alcohol(_randomMenu)
            }
            else{
                _randomMenu -= WD_alcohol(-1)

                if _randomMenu < WD_food(-1)
                {
                    temp_ChoiseExRef = WD_food(_randomMenu)
                }
                else{
                    _randomMenu -= WD_food(-1)

                    if _randomMenu < WD_sweets(-1)
                    {
                        temp_ChoiseExRef = WD_sweets(_randomMenu)
                    }
                }
            }
        }
    }

    ChooseFood
}