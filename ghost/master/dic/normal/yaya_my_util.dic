//******************************************************************************
// 自作便利関数
//******************************************************************************

// バージョン
GetVersion
{
	'Ver 1.2.0'
}

LastUpdate
{
	'フードオーダー機能の追加、誕生日イベントの追加、アップロード先お引越し'
}

// サーフェス、バルーンの初期設定
Init
{
	case dicMode{
		when MODE_NORMAL{
			'\1\b[2]\0\c'
		}
		when MODE_YURI{
			'\1\s[1999]\b[2]\0\c'
		}
		when MODE_SUZU{
			'\0\s[999]\1\b[2]\c'
		}
	}
}

// 改行スクリプト
// 引数0：改行の大きさ。(引数0)*50%の改行を行う。指定しない場合は1.5行分。
// 引数1：待ち時間。(引数1)*50ミリ秒待つ。指定しない場合は改行1行につき 150 * talkAutoWait ミリ秒待つ。
NewLine
{
    _lineCount = 3

    if _argc > 0
        _lineCount = _argv[0]
    
    _waitTime = 75 * _lineCount * talkAutoWait

    if _argc > 1
        _waitTime = _argv[1]

    // 引数0 × 50％の改行文字列を追加
    _newLine = '\n[' + TOSTR(_lineCount * 50) + ']'

    // 引数1 × 50msの時間のウェイトを追加
    _newLine += '\_w[' + TOSTR(_waitTime) + ']'

    _newLine
}

// 実数を文字数にするスクリプト。指定した桁数以下を切り捨てる。
// 引数0（実数）: 変換したい実数
// 引数1（整数）: 小数点以下第何位まで表示するか。指定しない場合は2（小数点以下2桁）
RealToStr
{
	_floorPoint = 2

	if _argc > 1
		_floorPoint = _argv[1]

	_str = TOSTR(_argv[0])

	_pointPos = STRSTR(_str,'.',0)

	if _pointPos < 0{
		_str = ''
	}
	else{
		_str = ERASE(_str, _pointPos + _floorPoint + 1, STRLEN(_str) - _pointPos - _floorPoint - 1)
	}

	_str
}

// 合計稼働時間（時間数）を取得するスクリプト。
GetTotalOperation_hour
{
	_totalOperation_hour = totalOperationSecond / 3600

	_totalOperation_hour
}

// 合計稼働時間（分数）を取得するスクリプト。
GetTotalOperation_minute
{
	_totalOperation_minute = (totalOperationSecond / 60) % 60

	_totalOperation_minute
}

// 合計稼働時間（秒数）を取得するスクリプト。
GetTotalOperation_second
{
	_totalOperation_second = totalOperationSecond % 60

	_totalOperation_second
}

// 今回の稼働時間（時間数）を取得するスクリプト。
GetCurrentOperation_hour
{
	_currentOperation_hour = currentOperationSecond / 3600

	_currentOperation_hour
}

// 今回の稼働時間（分数）を取得するスクリプト。
GetCurrentOperation_minute
{
	_currentOperation_minute = (currentOperationSecond / 60) % 60

	_currentOperation_minute
}

// 今回の稼働時間（秒数）を取得するスクリプト。
GetCurrentOperation_second
{
	_currentOperation_second = currentOperationSecond % 60

	_currentOperation_second
}

// 鈴の一人称を取得。
GetSuzuMyself
{
	if suzu_myself == undefined{
		'わたし'
		return
	}

	suzu_myself
}

// えんいー。
Yen_E
{
	'\e'
}